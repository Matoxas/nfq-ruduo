{"remainingRequest":"/Users/mataskazanavicius/Desktop/Trash/nfqRuduo/projektas/node_modules/babel-loader/lib/index.js!/Users/mataskazanavicius/Desktop/Trash/nfqRuduo/projektas/node_modules/eslint-loader/index.js??ref--13-0!/Users/mataskazanavicius/Desktop/Trash/nfqRuduo/projektas/src/store.js","dependencies":[{"path":"/Users/mataskazanavicius/Desktop/Trash/nfqRuduo/projektas/src/store.js","mtime":1537291697766},{"path":"/Users/mataskazanavicius/Desktop/Trash/nfqRuduo/projektas/node_modules/cache-loader/dist/cjs.js","mtime":1536695446428},{"path":"/Users/mataskazanavicius/Desktop/Trash/nfqRuduo/projektas/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mataskazanavicius/Desktop/Trash/nfqRuduo/projektas/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.search\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport products from './assets/products.json';\nVue.use(Vuex);\nvar state = {\n  added: [],\n  all: [],\n  orders: [],\n  search: ''\n};\nvar getters = {\n  added: function added(state) {\n    return state.added;\n  },\n  search: function search(state) {\n    return state.search;\n  },\n  orders: function orders(state) {\n    return state.orders;\n  },\n  allProducts: function allProducts(state) {\n    return state.all;\n  },\n  cartProducts: function cartProducts(state) {\n    return state.added.map(function (_ref) {\n      var id = _ref.id,\n          quantity = _ref.quantity;\n      var product = state.all.find(function (p) {\n        return p.id === id;\n      });\n      return {\n        name: product.name,\n        price: product.price,\n        quantity: quantity\n      };\n    });\n  }\n};\nvar actions = {\n  addtocart: function addtocart(_ref2, product) {\n    var commit = _ref2.commit;\n    commit('addtocart', product.id);\n  }\n};\nvar mutations = {\n  addtocart: function addtocart(state, product_id) {\n    var record = state.added.find(function (p) {\n      return p.id === product_id;\n    });\n\n    if (!record) {\n      state.added.push({\n        id: product_id,\n        quantity: 1\n      });\n    } else {\n      record.quantity++;\n    }\n\n    alert('produktas sėkmingai pridėtas į krepšelį.');\n  },\n  removeItem: function removeItem(state, index) {\n    state.added.splice(index, 1);\n  },\n  makeOrder: function makeOrder(state, order) {\n    state.orders.push(order);\n  },\n  updateQuantity: function updateQuantity(State, data) {\n    var index = data[0];\n    var quantity = data[1];\n    state.added[index].quantity = quantity;\n  },\n  setSearch: function setSearch(State, data) {\n    state.search = data;\n  },\n  setSomething: function setSomething(state, object) {\n    state[object.name] = object.content;\n  }\n};\nexport default new Vuex.Store({\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n});",{"version":3,"sources":["/Users/mataskazanavicius/Desktop/Trash/nfqRuduo/projektas/src/store.js"],"names":["Vue","Vuex","products","use","state","added","all","orders","search","getters","allProducts","cartProducts","map","id","quantity","product","find","p","name","price","actions","addtocart","commit","mutations","product_id","record","push","alert","removeItem","index","splice","makeOrder","order","updateQuantity","State","data","setSearch","setSomething","object","content","Store"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACAF,IAAIG,GAAJ,CAAQF,IAAR;AAEA,IAAMG,QAAQ;AACZC,SAAQ,EADI;AAEZC,OAAK,EAFO;AAGZC,UAAQ,EAHI;AAIZC,UAAQ;AAJI,CAAd;AAQA,IAAMC,UAAU;AACdJ,SAAO;AAAA,WAASD,MAAMC,KAAf;AAAA,GADO;AAEdG,UAAQ;AAAA,WAASJ,MAAMI,MAAf;AAAA,GAFM;AAGdD,UAAQ;AAAA,WAASH,MAAMG,MAAf;AAAA,GAHM;AAIdG,eAAa;AAAA,WAASN,MAAME,GAAf;AAAA,GAJC;AAKdK,gBAAc;AAAA,WAAUP,MAAMC,KAAN,CAAYO,GAAZ,CAAgB,gBAAkB;AAAA,UAAhBC,EAAgB,QAAhBA,EAAgB;AAAA,UAAbC,QAAa,QAAbA,QAAa;AACtD,UAAIC,UAAUX,MAAME,GAAN,CAAUU,IAAV,CAAe;AAAA,eAAKC,EAAEJ,EAAF,KAASA,EAAd;AAAA,OAAf,CAAd;AACF,aAAO;AACLK,cAAOH,QAAQG,IADV;AAELC,eAAOJ,QAAQI,KAFV;AAGLL;AAHK,OAAP;AAKD,KAPuB,CAAV;AAAA;AALA,CAAhB;AAgBA,IAAMM,UAAS;AACdC,WADc,4BACQN,OADR,EACgB;AAAA,QAAlBO,MAAkB,SAAlBA,MAAkB;AAC7BA,WAAO,WAAP,EAAoBP,QAAQF,EAA5B;AACA;AAHa,CAAf;AAMA,IAAMU,YAAY;AAEjBF,WAFiB,qBAENjB,KAFM,EAECoB,UAFD,EAEc;AAC3B,QAAMC,SAASrB,MAAMC,KAAN,CAAYW,IAAZ,CAAiB;AAAA,aAAKC,EAAEJ,EAAF,KAASW,UAAd;AAAA,KAAjB,CAAf;;AAEA,QAAI,CAACC,MAAL,EAAa;AACXrB,YAAMC,KAAN,CAAYqB,IAAZ,CAAiB;AACfb,YAAIW,UADW;AAEfV,kBAAU;AAFK,OAAjB;AAID,KALD,MAKO;AACLW,aAAOX,QAAP;AACA;;AACDa,UAAM,0CAAN;AACA,GAdY;AAgBdC,YAhBc,sBAgBHxB,KAhBG,EAgBIyB,KAhBJ,EAgBU;AACtBzB,UAAMC,KAAN,CAAYyB,MAAZ,CAAmBD,KAAnB,EAA0B,CAA1B;AACD,GAlBa;AAoBdE,WApBc,qBAoBJ3B,KApBI,EAoBG4B,KApBH,EAoBS;AACrB5B,UAAMG,MAAN,CAAamB,IAAb,CAAkBM,KAAlB;AACD,GAtBa;AAwBdC,gBAxBc,0BAwBCC,KAxBD,EAwBQC,IAxBR,EAwBa;AACzB,QAAIN,QAAQM,KAAK,CAAL,CAAZ;AACA,QAAIrB,WAAWqB,KAAK,CAAL,CAAf;AACA/B,UAAMC,KAAN,CAAYwB,KAAZ,EAAmBf,QAAnB,GAA8BA,QAA9B;AACD,GA5Ba;AA8BdsB,WA9Bc,qBA8BJF,KA9BI,EA8BGC,IA9BH,EA8BQ;AACpB/B,UAAMI,MAAN,GAAe2B,IAAf;AACD,GAhCa;AAkCdE,cAlCc,wBAkCDjC,KAlCC,EAkCMkC,MAlCN,EAkCa;AACzBlC,UAAMkC,OAAOpB,IAAb,IAAqBoB,OAAOC,OAA5B;AACD;AApCa,CAAlB;AAyCA,eAAe,IAAItC,KAAKuC,KAAT,CAAe;AAC7BpC,cAD6B;AAE7BK,kBAF6B;AAG7BW,kBAH6B;AAI7BG;AAJ6B,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport products from './assets/products.json';\nVue.use(Vuex)\n\nconst state = {\n  added : [],\n  all: [],\n  orders: [],\n  search: ''\n\n};\n\nconst getters = {\n  added: state => state.added,\n  search: state => state.search,\n  orders: state => state.orders,\n  allProducts: state => state.all,\n  cartProducts: state =>  state.added.map(({id,quantity}) =>{\n      let product = state.all.find(p => p.id === id)\n    return {\n      name : product.name,\n      price: product.price,\n      quantity\n    }\n  }),\n\n};\n\nconst actions ={\n\taddtocart({ commit }, product){\n\t\tcommit('addtocart', product.id)\n\t}\n}\n\nconst mutations = {\n\n\taddtocart (state, product_id ) {\n\t    const record = state.added.find(p => p.id === product_id)\n\n\t    if (!record) {\n\t      state.added.push({\n\t        id: product_id,\n\t        quantity: 1\n\t      })\n\t    } else {\n\t      record.quantity++\n      }\n      alert('produktas sėkmingai pridėtas į krepšelį.');\n\t    },\n\n    removeItem(state, index){\n      state.added.splice(index, 1);\n    },\n\n    makeOrder(state, order){\n      state.orders.push(order);\n    },\n\n    updateQuantity(State, data){\n      let index = data[0];\n      let quantity = data[1];\n      state.added[index].quantity = quantity;\n    },\n\n    setSearch(State, data){\n      state.search = data;\n    },\n\n    setSomething(state, object){\n      state[object.name] = object.content;\n    },\n  }\n\n\n\nexport default new Vuex.Store({\n\tstate,\n\tgetters,\n\tactions,\n\tmutations\n})\n"]}]}